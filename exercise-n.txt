//Answers for Workshop 2

Exercise 1:

Used:
use decodemtl_addressbook
source data/import-table-structure.sql;
Find + Replace decodemtl_addressbook_import to decodemtl_addressbook

Result:
Query OK, 0 rows affected, 1 warning (0.00 sec)

Query OK, 1 row affected (0.00 sec)

Database changed
Query OK, 0 rows affected, 1 warning (0.00 sec)

Query OK, 0 rows affected (0.02 sec)

Query OK, 0 rows affected, 1 warning (0.00 sec)

Query OK, 0 rows affected (0.01 sec)

Query OK, 0 rows affected, 1 warning (0.00 sec)

Query OK, 0 rows affected (0.01 sec)

mysql> show tables
    -> ;
+----------------------------------------+
| Tables_in_decodemtl_addressbook        |
+----------------------------------------+
| Account                                |
| AddressBook                            |
| Entry                                  |
+----------------------------------------+
3 rows in set (0.00 sec)

Exercise 2:

Account:
Used:
INSERT INTO Account SET id=NULL, email="jim@email.com", password="jimspass", createdOn="2017-01-24";
SELECT * FROM Account;


AddressBook:
Used:
INSERT INTO AddressBook SET id=NULL, accountId="123", name="Loren Ipsom Inc", createdOn="2017-01-20", modifiedOn="2017-01-23";


Entry:
INSERT INTO Entry SET id=NULL, 
addressBookId="134", firstName="Loren", lastName="Ipsum", 
birthday="1989-01-05", type="home", subtype="phone", 
contentLineOne="514-625-6432", contentLineTwo=NULL;

INSERT INTO Entry SET id=NULL, 
addressBookId="134", firstName="Pizza", lastName="Face", 
birthday="1970-01-12", type="work", subtype="phone", 
contentLineOne="514-462-6432", contentLineTwo=NULL;

INSERT INTO Entry SET id=NULL, 
addressBookId="134", firstName="Mayor", lastName="McCheese", 
birthday="1989-01-05", type="other", subtype="address", 
contentLineOne="514-095-6452", contentLineTwo=NULL;

Exercise 3:

SELECT * FROM Account;
+----+---------------+----------+---------------------+------------+
| id | email         | password | createdOn           | modifiedOn |
+----+---------------+----------+---------------------+------------+
|  1 | jim@email.com | jimspass | 0000-00-00 00:00:00 | NULL       |
+----+---------------+----------+---------------------+------------+
1 row in set (0.00 sec)


SELECT * FROM AddressBook;
+----+-----------+-----------------+---------------------+---------------------+
| id | accountId | name            | createdOn           | modifiedOn          |
+----+-----------+-----------------+---------------------+---------------------+
|  1 |       123 | Loren Ipsom Inc | 2017-01-20 00:00:00 | 2017-01-23 00:00:00 |
+----+-----------+-----------------+---------------------+---------------------+
1 row in set (0.00 sec)


Select * FROM Entry;
+----+---------------+-----------+----------+---------------------+-------+---------+----------------+----------------+------------------+-----------------+-----------------+
| id | addressBookId | firstName | lastName | birthday            | type  | subtype | contentLineOne | contentLineTwo | contentLineThree | contentLineFour | contentLineFive |
+----+---------------+-----------+----------+---------------------+-------+---------+----------------+----------------+------------------+-----------------+-----------------+
|  1 |           134 | Loren     | Ipsum    | 1989-01-05 00:00:00 | home  | phone   | 514-625-6432   | NULL           | NULL             | NULL            | NULL            |
|  2 |           134 | Pizza     | Face     | 1970-01-12 00:00:00 | work  | phone   | 514-462-6432   | NULL           | NULL             | NULL            | NULL            |
|  3 |           134 | Mayor     | McCheese | 1989-01-05 00:00:00 | other | address | 514-095-6452   | NULL           | NULL             | NULL            | NULL            |
+----+---------------+-----------+----------+---------------------+-------+---------+----------------+----------------+------------------+-----------------+-----------------+
3 rows in set (0.01 sec)

Exercise 4:

UPDATE Account SET email="Jimiscool@email.com" WHERE id=1;

UPDATE AddressBook SET name="Lauren Ipsom" WHERE id=1;

UPDATE Entry SET type="home" WHERE id IN (1,2,3);

Exercise 5:

TRUNCATE table Entry;
DESCRIBE Entry;

Result:
SELECT * FROM Entry;
Empty set (0.01 sec)

Exercise 6:
DROP TABLE Account;

Result:
SELECT * FROM Account;
ERROR 1146 (42S02): Table 'decodemtl_addressbook.Account' doesn't exist

Exercise 7:
CREATE DATABASE decodemtl_addressbook_import;
source data/import-table-structure.sql;

Result:
SHOW TABLES;
+----------------------------------------+
| Tables_in_decodemtl_addressbook_import |
+----------------------------------------+
| Account                                |
| AddressBook                            |
| Entry                                  |
+----------------------------------------+
3 rows in set (0.00 sec)

Pt 2:

USE decodemtl_addressbook_import;
source data/import-account.sql;
source data/import-addressbook.sql;
source data/import-entry.sql;

Exercise 8:

Used:
SELECT Account.email FROM Account WHERE id=63;

Result:
+-------------------------------------------------+
| email                                           |
+-------------------------------------------------+
| consectetuer.rhoncus.Nullam@temporloremeget.org |
+-------------------------------------------------+
1 row in set (0.00 sec)

Used:
SELECT name FROM AddressBook WHERE id=3;

Result:
+--------------------+
| name               |
+--------------------+
| Donec Incorporated |
+--------------------+
1 row in set (0.00 sec)

Used:
SELECT createdOn FROM AddressBook WHERE name="Lorem Foundation";

Result:
+---------------------+
| createdOn           |
+---------------------+
| 2016-06-26 02:43:41 |
| 2015-05-04 14:28:16 |
+---------------------+
2 rows in set (0.00 sec)

Exercise 9:

How many Accounts exist?

Used:
Select COUNT(*) FROM Account;

Result:
+----------+
| COUNT(*) |
+----------+
|     1000 |
+----------+
1 row in set (0.01 sec)

How many Address Books exist?

Used:
SELECT DISTINCT name FROM AddressBook;

Result:
1045 rows in set (0.00 sec)

How many Address Book Entries exist?

Used:
SELECT COUNT(*) FROM AddressBook;

+----------+
| COUNT(*) |
+----------+
|     1100 |
+----------+
1 row in set (0.00 sec)

Exercise 10:

How many Address Book Entries are listed as born before February 12th of 1982?

SELECT COUNT(*) FROM Entry WHERE birthday < "1982-02-12";

+----------+
| COUNT(*) |
+----------+
|     2687 |
+----------+
1 row in set (0.00 sec)

How many Address Book Entries are listed as born on or after January 1st of 1965?

SELECT COUNT(*) FROM Entry WHERE birthday > "1964-12-31";

+----------+
| COUNT(*) |
+----------+
|     2597 |
+----------+
1 row in set (0.00 sec)

Which Address Book Entry is listed as being the oldest of age?

SELECT MIN(birthday) FROM Entry;

+---------------------+
| MIN(birthday)       |
+---------------------+
| 1945-09-02 09:21:58 |
+---------------------+
1 row in set (0.00 sec)

Exercise 10:

How many Address Book Entries are not listed as other?

SELECT COUNT(*) type, subtype FROM Entry WHERE type != "other" AND subtype != "other";

+------+---------+
| type | subtype |
+------+---------+
| 2800 | phone   |
+------+---------+
1 row in set (0.01 sec)

How many Address Book Entries are listed as either home or work?

SELECT COUNT(*) type, subtype FROM Entry WHERE type != "other" AND subtype != "other";

+------+---------+
| type | subtype |
+------+---------+
| 2800 | phone   |
+------+---------+
1 row in set (0.01 sec)

How many Address Book Entries are listed as phones?

SELECT COUNT(*) type, subtype FROM Entry WHERE type = "phone" OR subtype = "phone";

+------+---------+
| type | subtype |
+------+---------+
|  600 | phone   |
+------+---------+
1 row in set (0.00 sec)

Advanced Part 3 
Exercise 1

Which Account owns the most Address Books?

SELECT accountId, Count(*) FROM AddressBook GROUP BY accountId ORDER BY Count(*) DESC LIMIT 1;

+-----------+----------+
| accountId | Count(*) |
+-----------+----------+
|        14 |       19 |
+-----------+----------+
1 row in set (0.00 sec)

Which Address Book contains the most Entries?

SELECT addressBookId, Count(*) FROM Entry GROUP BY addressBookId ORDER BY Count(*) DESC LIMIT 1;

+---------------+----------+
| addressBookId | Count(*) |
+---------------+----------+
|            37 |       52 |
+---------------+----------+
1 row in set (0.00 sec)

Exercise 2

How many Address Book Entries have phones starting with area code 3XX?

SELECT SUM(contentLineOne LIKE '(3%') FROM Entry;

+--------------------------------+
| SUM(contentLineOne LIKE '(3%') |
+--------------------------------+
|                             39 |
+--------------------------------+
1 row in set (0.00 sec)


How many Address Book Entries have home phones not containing the digit 5?

SELECT COUNT(*) FROM Entry WHERE type = 'home' AND subtype = 'phone' AND contentLineOne NOT LIKE '%5%';

+----------+
| COUNT(*) |
+----------+
|       76 |
+----------+
1 row in set (0.00 sec)

How many Address Book Entries are work phones starting with a country code?

SELECT COUNT(*) FROM Entry WHERE type = 'work' AND subtype = 'phone' AND contentLineOne LIKE '1-%';

+----------+
| COUNT(*) |
+----------+
|       60 |
+----------+
1 row in set (0.01 sec)

